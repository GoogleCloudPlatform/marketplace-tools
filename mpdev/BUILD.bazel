load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//docker/package_managers:apt_key.bzl", "add_apt_key")
load("@io_bazel_rules_docker//docker/package_managers:download_pkgs.bzl", "download_pkgs")
load("@io_bazel_rules_docker//docker/package_managers:install_pkgs.bzl", "install_pkgs")
load("@io_bazel_rules_docker//container:container.bzl", "container_push", "container_image")

go_library(
    name = "go_default_library",
    srcs = ["main.go"],
    importpath = "github.com/GoogleCloudPlatform/marketplace-tools/mpdev",
    visibility = ["//visibility:private"],
    deps = ["//mpdev/cmd:go_default_library"],
)

go_binary(
    name = "mpdev",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

add_apt_key(
    name = "image_with_keys",
    image = "@cloud-sdk//image",
    keys = [
        "@docker_apt_key//file",
    ],
)

download_pkgs(
    name = "pkg",
    packages = [
        "zip",
        "docker-ce",
        "docker-ce-cli",
        "containerd.io",
    ],
    additional_repos = [
        "deb https://download.docker.com/linux/debian buster stable",
    ],
    image_tar = ":image_with_keys.tar",
)

install_pkgs(
    name = "mpdev_base",
    image_tar = "@cloud-sdk//image",
    installables_tar = ":pkg.tar",
    output_image_name = "mpdev_base",
)

container_image(
    name = "mpdev_image",
    base = ":mpdev_base",
    files = [":mpdev"],
    entrypoint = ["/mpdev"],
)

container_push(
    name = "publish",
    image = ":mpdev_image",
    format = "Docker",

    # Any of these components may have variables.
    registry = "gcr.io",
    repository = "{GCR_PROJECT}/mpdev",
    tag = "{GCR_TAG}",
)
